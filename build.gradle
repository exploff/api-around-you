plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.sonarqube" version "4.4.1.3373"
	id 'org.openapi.generator' version '7.1.0'
	id 'jacoco'
}

jacoco {
	toolVersion = "0.8.11"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required =  true
	}
}

sonar{
    properties {
        property 'sonar.projectKey', 'around-you_around-you'
        property 'sonar.organization', 'around-you'
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.dynamicAnalysis", "reuseReports"
		property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
		property "sonar.language", "java"
    }
}

group = 'com.jhnr'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-json'

	implementation 'commons-io:commons-io:2.11.0'
	implementation group: 'org.json', name: 'json', version: '20231013'

	// openAPI dependencies
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.19'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

	// aws dependency
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.662'

	// data base dependencies
	implementation 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// config openApi
openApiGenerate {
	inputSpec.set("$projectDir/src/main/resources/openapi.yaml")
	generatorName.set("spring")
	apiPackage.set("com.jhnr.myclub.generated.api")
	modelPackage.set("com.jhnr.myclub.generated.api.dto")
	skipValidateSpec.set(false)
	enablePostProcessFile.set(true)
	outputDir.set("$buildDir/generated/sources/openapi")

	configOptions.set(
			[
					'useTags': 'true',
					'dateLibrary': 'java17',
					'legacyDiscriminatorBehavior': 'false',
					'interfaceOnly': 'true',
					'skipDefaultInterface': 'true',
					'library': 'spring-boot',
					'useSpringBoot3': 'true',
					'usePageable': 'false'
			]
	)
}

sourceSets {
	main {
		java {
			srcDir("$buildDir/generated/sources/openapi/src/main/java")
		}
	}
}


compileJava.dependsOn tasks.named("openApiGenerate")


tasks.named('test') {
	useJUnitPlatform()
}

// add  --spring.profiles.active=dev to environment variable to run APP on dev